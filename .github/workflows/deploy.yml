name: Deploy to Server

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Paso 1: Clonar repositorio
      - name: Checkout code
        uses: actions/checkout@v4.2.2

      # Paso 2: Configurar la clave SSH para conectarse al servidor
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SERVER_SSH_KEY }}

      # Paso 3: Sincronizar archivos con rsync
      - name: Sync files to server
        run: |
          set -x
          rsync -avz --exclude='.git/' --exclude='vendor/' --exclude='.env' \
          -e "ssh -o StrictHostKeyChecking=no -p ${{ secrets.SERVER_PORT }}" \
          ./ ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }}:/home/${{ secrets.SERVER_USER }}/encuesta.aware.tools/

      # Paso 4: Ejecutar Composer en el servidor
      - name: Install Composer dependencies
        run: |
          set -x
          ssh -o StrictHostKeyChecking=no -p ${{ secrets.SERVER_PORT }} ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} \
          "cd /home/${{ secrets.SERVER_USER }}/encuesta.aware.tools/extensions && composer install --no-dev --optimize-autoloader"

      # Paso 5: Registrar el deployment
      - name: Register deployment in GitHub
        uses: actions/github-script@v6
        with:
          script: |
            const { data: deployment } = await github.rest.repos.createDeployment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: context.ref,
              required_contexts: [],
              environment: 'production',
              description: 'Deployed successfully to production server',
              auto_merge: false
            });

            await github.rest.repos.createDeploymentStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              deployment_id: deployment.id,
              state: 'success',
              environment_url: 'https://encuesta.aware.tools',
              log_url: `${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`
            });
